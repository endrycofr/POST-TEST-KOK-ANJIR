#make_bin#

; BIN is plain binary format similar to .com format, but not limited to 1 segment;
; All values between # are directives, these values are saved into a separate .binf file.
; Before loading .bin file emulator reads .binf file with the same file name.

; All directives are optional, if you don't need them, delete them.

; set loading address, .bin file will be loaded to this address:
#LOAD_SEGMENT=0500h#
#LOAD_OFFSET=0000h#

; set entry point:
#CS=0500h#    ; same as loading segment
#IP=0000h#    ; same as loading offset

; set segment registers
#DS=0500h#    ; same as loading segment
#ES=0500h#    ; same as loading segment

; set stack
#SS=0500h#    ; same as loading segment
#SP=FFFEh#    ; set to top of loading segment

; set general registers (optional)
#AX=0000h#
#BX=0000h#
#CX=0000h#
#DX=0000h#
#SI=0000h#
#DI=0000h#
#BP=0000h#

; add your code here

; add your code here
DATA SEGMENT
PORTA EQU 00H
PORTB EQU 02H
PORTC EQU 04H
PORT_CON EQU 06H
DATA ENDS

CODE SEGMENT
MOV AX,DATA
MOV DS,AX

org 0000h


;add your code here
START:

MOV DX, PORT_CON
MOV AL, 10000000B; PORT A as Output Port B as Output
OUT DX, AL

JMP XX

XX:

MOV AL, 01H ;0001
MOV DX, PORTB
OUT DX,AL
MOV AL, 01000000B ;0
MOV DX, PORTA
OUT DX, AL
MOV CX,0CDH;Delay
Delay0:loop Delay0



MOV AL, 02H  ;0010
MOV DX, PORTB
OUT DX,AL
MOV AL, 01000000B  ;0
MOV DX, PORTA
OUT DX, AL
MOV CX,0CDH;Delay
Delay1:loop Delay1



MOV AL, 04H  ;0100
MOV DX, PORTB
OUT DX,AL
MOV AL, 00100100B ;0
MOV DX, PORTA
OUT DX, AL
MOV CX,0CDH;Delay
Delay2:loop Delay2

MOV AL, 08H    ;1000
MOV DX, PORTB
OUT DX,AL
MOV AL, 00000010B ;9
MOV DX, PORTA
OUT DX, AL
MOV CX,0CDH;Delay
Delay3:loop Delay3


JMP XX


CODE ENDS
END

HLT           ; halt!








; [SOURCE]: C:\Users\HP\Documents\tugas\kuliah\ARSISKOM\MOX\ISKGAMING.asm
